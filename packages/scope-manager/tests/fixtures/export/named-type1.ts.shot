// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`export named-type1 1`] = `
ScopeManager {
  variables: [
    ImplicitGlobalConstTypeVariable,
    Variable$2 {
      defs: [
        TypeDefinition$1 {
          name: Identifier<"X">,
          node: TSTypeAliasDeclaration$1,
        },
      ],
      name: "X",
      references: [],
      isValueVariable: false,
      isTypeVariable: true,
    },
  ],
  scopes: [
    GlobalScope$1 {
      block: Program$2,
      isStrict: false,
      references: [],
      set: Map {
        "const" => ImplicitGlobalConstTypeVariable,
      },
      type: "global",
      upper: null,
      variables: [
        ImplicitGlobalConstTypeVariable,
      ],
    },
    ModuleScope$2 {
      block: Program$2,
      isStrict: true,
      references: [],
      set: Map {
        "X" => Variable$2,
      },
      type: "module",
      upper: GlobalScope$1,
      variables: [
        Variable$2,
      ],
    },
  ],
}
`;

exports[`tests/fixtures.test.ts > export > named-type1 1`] = `
ScopeManager {
  variables: Array [
    ImplicitGlobalConstTypeVariable,
    Variable$2 {
      defs: Array [
        TypeDefinition$1 {
          name: Identifier<"X">,
          node: TSTypeAliasDeclaration$1,
        },
      ],
      name: "X",
      references: Array [],
      isValueVariable: false,
      isTypeVariable: true,
    },
  ],
  scopes: Array [
    GlobalScope$1 {
      block: Program$2,
      isStrict: false,
      references: Array [],
      set: Map {
        "const" => ImplicitGlobalConstTypeVariable,
      },
      type: "global",
      upper: null,
      variables: Array [
        ImplicitGlobalConstTypeVariable,
      ],
    },
    ModuleScope$2 {
      block: Program$2,
      isStrict: true,
      references: Array [],
      set: Map {
        "X" => Variable$2,
      },
      type: "module",
      upper: GlobalScope$1,
      variables: Array [
        Variable$2,
      ],
    },
  ],
}
`;
